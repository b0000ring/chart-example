<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chartexample.com</title>
    <link>https://chartexample.com/</link>
    <description>Recent content on chartexample.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 08 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://chartexample.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello world!</title>
      <link>https://chartexample.com/blog/first-post/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://chartexample.com/blog/first-post/</guid>
      <description>For my first post here I have decided to put my little game created for pico-8 fantasy console.
I also have a personal page on itch.io (with not so much to see on it)</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://chartexample.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chartexample.com/about/</guid>
      <description>chartexample.com - my personal blog where I implement different types of charts by using set of javascript (and sometimes other) libraries.
You can find information about me on my LinkedIn page
Feel free to contact me by E-Mail - hello@alexchirkin.me If you find some error or want to contribute to this project - GitHub .</description>
    </item>
    
    <item>
      <title>D3</title>
      <link>https://chartexample.com/charts/bar/bar-d3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chartexample.com/charts/bar/bar-d3/</guid>
      <description>function makeBar() { //empty data set let data = [0, 0, 0, 0, 0, 0, 0, 0] // max data item value const max = 10 // min data item value const min = 0 const paddingY = 50 const paddingX = 50 // selecting root element for plot const svg = d3.select(&amp;#39;#chart&amp;#39;) // getting root element width const width = parseInt(svg.style(&amp;#39;width&amp;#39;)) // getting root element height const height = parseInt(svg.</description>
    </item>
    
    <item>
      <title>D3</title>
      <link>https://chartexample.com/charts/heatmap/heatmap-d3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chartexample.com/charts/heatmap/heatmap-d3/</guid>
      <description>function makeHeatmap() { // max data item value const max = 4 // min data item value const min = 1 // generating dataset const data = new Array(64) .fill() .map(() =&amp;gt; (Math.random() * max + min) | 0) // how much items could be in row const rowLength = 8 // how much rows will be in plot const rows = (data.length / rowLength) | 0 // setting values for margins of svg content const margin = {top: 50, left: 50, right: 100, bottom: 50} // selecting svg container const svg = d3.</description>
    </item>
    
    <item>
      <title>D3</title>
      <link>https://chartexample.com/charts/linear/linear-d3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chartexample.com/charts/linear/linear-d3/</guid>
      <description>function makeLinear() { //empty data set let data = [0, 0, 0, 0, 0, 0, 0, 0] // max data item value const max = 10 // min data item value const min = 0 const paddingY = 50 const paddingX = 50 // selecting root element for plot const svg = d3.select(&amp;#39;#chart&amp;#39;) // getting root element width const width = parseInt(svg.style(&amp;#39;width&amp;#39;)) // getting root element height const height = parseInt(svg.</description>
    </item>
    
    <item>
      <title>D3</title>
      <link>https://chartexample.com/charts/pie/pie-d3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chartexample.com/charts/pie/pie-d3/</guid>
      <description>function makePie() { // empty data set let data = [10, 5, 2] const padding = 10 // selecting root element for plot const svg = d3.select(&amp;#39;#chart&amp;#39;) .attr(&amp;#39;cursor&amp;#39;, &amp;#39;pointer&amp;#39;) // getting root element width const width = parseInt(svg.style(&amp;#39;width&amp;#39;)) // getting root element height const height = parseInt(svg.style(&amp;#39;height&amp;#39;)) // count radius based on container width or height // (the smallest one) and applying the padding const radius = Math.min(width, height) / 2 - padding // creating of colors scale const scaleColors = d3.</description>
    </item>
    
    <item>
      <title>D3</title>
      <link>https://chartexample.com/charts/scatter/scatter-d3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chartexample.com/charts/scatter/scatter-d3/</guid>
      <description>function makeScatter() { // max data item value const max = 100 // min data item value const min = 0 // generating dataset const data = new Array(100).fill().map(() =&amp;gt; ({ x: (Math.random() * max) | 0, y: (Math.random() * max) | 0 })) // setting values for margins of svg content const margin = {top: 10, left: 50, right: 10, bottom: 50} // selecting svg container const svg = d3.</description>
    </item>
    
  </channel>
</rss>
